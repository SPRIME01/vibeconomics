[mypy]
python_version = 3.10
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
strict_equality = True

ignore_missing_imports = False 

exclude = (?x)(
    tests/conftest\.py$ # Exclude the main conftest in the tests directory
  )

# Per-module settings
[mypy-sqlmodel.*]
ignore_missing_imports = True

[mypy-fastapi.*]
ignore_missing_imports = True

[mypy-pytest.*]
ignore_missing_imports = True

[mypy-PIL.*] 
ignore_missing_imports = True

# Added based on previous mypy run and stub installation attempts
[mypy-pydantic_settings.*]
ignore_missing_imports = True

[mypy-passlib.*] # Covers passlib.context
ignore_missing_imports = True

[mypy-jinja2.*]
ignore_missing_imports = True

[mypy-alembic.*]
ignore_missing_imports = True

[mypy-tenacity.*]
ignore_missing_imports = True

[mypy-typer.*]
ignore_missing_imports = True

[mypy-sentry_sdk.*]
ignore_missing_imports = True

[mypy-starlette.*] # For starlette.middleware.cors and other starlette components
ignore_missing_imports = True

[mypy-dspy.*] # Added for dspy-ai library
ignore_missing_imports = True

# The [mypy-tests.conftest] with ignore_missing_imports = True did not resolve the previous
# "Cannot find implementation or library stub for module named "backend.tests.conftest""
# because it's not about imports *within* conftest, but about Mypy trying to find/treat conftest itself as a module.
# Excluding it is a more direct approach.
# [mypy-tests.conftest] 
# ignore_missing_imports = True
