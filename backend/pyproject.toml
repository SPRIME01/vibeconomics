[project]
name = "app"
version = "0.1.0"
description = ""
requires-python = ">=3.10,<4.0"
dependencies = [
    "fastapi[standard]>=0.115.12,<1.0.0",
    "python-multipart>=0.0.20,<1.0.0",
    "email-validator>=2.1.0.post1,<3.0.0.0",
    "passlib[bcrypt]>=1.7.4,<2.0.0",
    "tenacity>=9.1.2,<10.0.0",    "pydantic>=2.11.5",
    "emails>=0.6,<1.0",
    "jinja2>=3.1.6,<4.0.0",
    "alembic>=1.16.1,<2.0.0",
    "httpx>=0.28.1,<1.0.0",
    "psycopg[binary]>=3.2.9,<4.0.0",
    "sqlmodel>=0.0.24,<1.0.0",
    "dspy-ai>=2.4.3,<3.0.0",
    # Pin bcrypt until passlib supports the latest
    "bcrypt==4.3.0",
    "pydantic-settings>=2.9.1,<3.0.0",
    "sentry-sdk[fastapi]>=2.29.1,<3.0.0",
    "pyjwt>=2.10.1,<3.0.0",
]

[tool.uv]
dev-dependencies = [
    "pytest>=8.3.5,<9.0.0",
    "pyre-check>=0.9.0",
    "ruff>=0.11.11,<1.0.0",
    "pre-commit>=4.2.0,<5.0.0",
    "coverage>=7.8.2,<8.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = [
    "tests",
]
python_files = ["test_*.py", "*_test.py", "tests.py"]
addopts = "--import-mode=importlib -v"
